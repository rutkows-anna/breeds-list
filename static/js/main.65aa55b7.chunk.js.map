{"version":3,"sources":["components/Header/Header.js","components/Loader/Loader.js","components/Error/Error.js","components/Modal/Modal.js","components/BreedItem/BreedItem.js","components/Search/Search.js","components/BreedsList/BreedsList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Loader","loading","size","color","Error","initialState","error","image","reducerImage","state","action","type","payload","Modal","breed","onClose","useReducer","dispatch","getRandomImage","images","Math","floor","random","length","useEffect","fetch","then","response","ok","json","message","catch","modal","onClick","src","alt","createPortal","document","getElementById","BreedItem","useState","showModal","setShowModal","toggleModal","Search","searchValue","onSearchChange","placeholder","value","onChange","event","target","breeds","reducerBreeds","BreedsList","Object","keys","filter","toLowerCase","includes","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.65aa55b7.chunk.js","sourcesContent":["import { FaDog } from \"react-icons/fa\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">Breeds list</h1>\n      <FaDog className=\"header__icon\" />\n    </header>\n  );\n};\n\nexport default Header;\n","import ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Loader = ({ loading }) => {\n    return (\n        <ClipLoader size={100} color={\"#474554\"} loading={loading} />\n    )\n}\n\nexport default Loader;","const Error = () => {\n  return <p className=\"error__text\">Something went wrong.</p>;\n};\n\nexport default Error;\n","import { useEffect, useReducer } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Loader from \"../Loader/Loader\";\nimport Error from \"../Error/Error\";\n\nconst initialState = {\n  loading: true,\n  error: false,\n  image: \"\",\n};\n\nconst reducerImage = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_IMAGES\":\n      return {\n        ...state,\n        loading: false,\n        image: action.payload,\n      };\n    case \"FETCH_IMAGES_ERROR\":\n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Modal = ({ breed, onClose }) => {\n  const [state, dispatch] = useReducer(reducerImage, initialState);\n\n  const getRandomImage = (images) => {\n    const randomIndex = Math.floor(Math.random() * images.length);\n    const image = images[randomIndex];\n    return image;\n  };\n\n  useEffect(() => {\n    fetch(`https://dog.ceo/api/breed/${breed}/images`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          return dispatch({ type: \"FETCH_IMAGES_ERROR\" });\n        }\n      })\n      .then((images) => {\n        dispatch({\n          type: \"FETCH_IMAGES\",\n          payload: getRandomImage(images.message),\n        });\n      })\n      .catch((error) => {\n        dispatch({ type: \"FETCH_IMAGES_ERROR\" });\n      });\n  }, [breed]);\n\n  const modal = (\n    <div className=\"modal\">\n      <div className=\"modal__container\">\n        <button className=\"modal__button\" onClick={onClose}>\n          X\n        </button>\n        <Loader loading={state.loading} />\n        {state.image && (\n          <img src={state.image} alt=\"dog\" className=\"modal__image\" />\n        )}\n        {state.error && <Error />}\n        <h1 className=\"modal__title\">{breed}</h1>\n      </div>\n    </div>\n  );\n\n  return createPortal(modal, document.getElementById(\"modal-root\"));\n};\n\nexport default Modal;\n","import { useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\n\nconst BreedItem = ({ breed }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <>\n      <button className=\"breed__button\" onClick={toggleModal}>\n        {breed}\n      </button>\n      {showModal && <Modal breed={breed} onClose={toggleModal} />}\n    </>\n  );\n};\n\nexport default BreedItem;\n","const Search = ({ searchValue, onSearchChange }) => {\n  const handleOnChange = (event) => {\n    onSearchChange(event.target.value);\n  };\n\n  return (\n    <input\n      className=\"search\"\n      type=\"text\"\n      placeholder=\"Search for breeds...\"\n      value={searchValue}\n      onChange={handleOnChange} />\n  );\n};\n\nexport default Search;\n","import { useEffect, useReducer } from \"react\";\nimport BreedItem from \"../BreedItem/BreedItem\";\nimport Loader from \"../Loader/Loader\";\nimport Error from \"../Error/Error\";\nimport Search from \"../Search/Search\";\n\nconst initialState = {\n  loading: true,\n  error: false,\n  breeds: [],\n  searchValue: \"\",\n};\n\nconst reducerBreeds = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_BREEDS\":\n      return {\n        ...state,\n        loading: false,\n        breeds: action.payload,\n      };\n    case \"FETCH_BREEDS_ERROR\":\n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    case \"SET_SEARCH_VALUE\":\n      return {\n        ...state,\n        searchValue: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst BreedsList = () => {\n  const [state, dispatch] = useReducer(reducerBreeds, initialState);\n\n  useEffect(() => {\n    fetch(\"https://dog.ceo/api/breeds/list/all\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          return dispatch({ type: \"FETCH_BREEDS_ERROR\" });\n        }\n      })\n      .then((breeds) => {\n        dispatch({\n          type: \"FETCH_BREEDS\",\n          payload: Object.keys(breeds.message),\n        });\n      })\n      .catch((error) => {\n        dispatch({ type: \"FETCH_BREEDS_ERROR\" });\n      });\n  }, []);\n\n  const handleOnSearchChange = (searchValue) => {\n    dispatch({ type: \"SET_SEARCH_VALUE\", payload: searchValue });\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Search\n        searchValue={state.searchValue}\n        onSearchChange={handleOnSearchChange}\n      />\n      <Loader loading={state.loading} />\n      <div className=\"container\">\n        {state.breeds.length > 0 &&\n          state.breeds\n            .filter((breed) => {\n              return breed\n                .toLowerCase()\n                .includes(state.searchValue.toLowerCase());\n            })\n            .map((breed) => {\n              return <BreedItem key={breed} breed={breed} />;\n            })}\n      </div>\n      {state.error && <Error />}\n    </div>\n  );\n};\n\nexport default BreedsList;","import Header from \"./components/Header/Header\";\nimport BreedsList from \"./components/BreedsList/BreedsList\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <BreedsList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport './styles/main.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}